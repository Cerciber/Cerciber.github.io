[
    {
        "type": "title",
        "info": {
            "theme": "5",
            "title": "TrimCode"
        }
    },
    {
        "type": "presentation",
        "info": {
            "theme": "1",
            "title": "",
            "decription": "",
            "authors": [
                "Cesar Augusto Torres Ardila"
            ]
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "3",
            "type": "2",
            "title": "¿Qué es?",
            "decription": "TrimCode es una aplicación de escritorio que le permite a los programadores almacenar, organizar, editar y compliar clases de distintos lenguajes de programación. Permite conservar la estructura de las clases intacta y asilada para uso. TrimCode tiene la capacidad de generar una interfáz de compilación para las clases con campos de entrada para los parametros del constructor y un campo de salida para la consola. De esta forma es posbile compilar clases sin un método principal.",
            "image": "/Images/trimcode1.png"
        }
    },
    {
        "type": "images",
        "info": {
            "theme": "2",
            "title": "Vista general",
            "decription": "",
            "images": [
                "/Images/trimcode18.png",
                "/Images/trimcode16.png",
                "/Images/trimcode19.png"
            ]
        }
    },
    {
        "type": "characteristics",
        "info": {
            "theme": "1",
            "title": "Características del proyecto",
            "decription": "Este proyecto de iniciativa personal fue creado para permitirle a los desarrolladores acceder y ejecutar facilemente sus propias clases de diferentes lenguajes sin la necesidad de recurir a los distintos entornos de desarrollo o generar ejecutables.",
            "subtitles": [
                "Equipo:",
                "Tipo:",
                "Arquitectura:",
                "Lenguajes:",
                "Tecnologías:"
            ],
            "subdescriptions": [
                "<b>Cesar Augusto Torres Ardilla</b>. Tecnólogo en Análisis y desarrollo de Sistemas de información del Servicio Nacional de Aprendizaje (SENA). Estudiante de Ingeniería de Sistemas y Computación de la Universidad Nacional de Colombia.",
                "Aplicación de escritorio",
                "MVC (Modelo - Vista - Controlador)",
                "Java SE<br>MS-DOS commands",
                "Swing<br>Apache Commons"
            ]
        }
    },
    {
        "type": "title",
        "info": {
            "theme": "5",
            "title": "Funcionamiento"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "3",
            "type": "1",
            "title": "Pantalla principal",
            "decription": "En esta pantalla se listan todas las clases que el usuario tenga alamecnadas. Cada elemento de la lista es descrito con el nombre del archivo, el lenguaje al que pertenece, los parametros del constructor que exige y la descripción de la clase dada por los comentarios. Adicionalmente permite ingresar nuevas clases, filtrar clases y posee algunos controles de manipulación.",
            "image": "/Images/trimcode1.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "2",
            "type": "2",
            "title": "Controles",
            "decription": "El primer boton abre la configuración. Los siguientes 3 botones cumplen con el estandar de ventanas para minimizar, maximizar y cerrar. El siguiente botón abre la ventana para ingresar una nueva clase. El ultimo botón cierra todos los compiladores que se encuentren activos.",
            "image": "/Images/trimcode22.png"
        }
    },
    {
        "type": "description-images",
        "info": {
            "theme": "1",
            "title": "Ingresar codigo",
            "decription": "",
            "subtitles": [
                "Ingresar",
                "Buscar"
            ],
            "subdescriptions": [
                "Este campo le permite al usuario ingresar la dirección local de la clase que quiera incluir en la lista. Si la dirección no existe o si el lenguaje no esta soportado el sistema no le permitirá en ingreso.",
                "También es posible incluir clases a través de una interfaz de busqueda que cumple con los mismos criterios de ingreso del campo."
            ],
            "images": [
                "/Images/trimcode21.png",
                "/Images/trimcode10.png"
            ]
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "3",
            "type": "1",
            "title": "Añadir codigo",
            "decription": "En esta ventana el usuario puede crear una nueva clase. El usuario ingresa el nombre que tendrá el archivo con su extensión rspectiva del lenguaje. También puede especificar si quiere emplear una plantilla para el lenguaje o si se quiere crear el archivo vacio. Si el nombre del archivo ya existe o si el lenguaje no está soportado no se permitirá la creación.",
            "image": "/Images/trimcode3.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "2",
            "type": "2",
            "title": "Filtrar codigo",
            "decription": "El campo de filtro permite buscar las clases que cumplan con los valores especificados. El filtro permite buscar por el nombre del archivo y también permite realizar un filtro multiple especificando el nombre, el lenguaje (ya sea la extención o el nombre del lenguaje) y la descripción separadas por comas. El filtro se aplica cada vez que el usuario ingresa y elimina un caracter.",
            "image": "/Images/trimcode11.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "1",
            "type": "1",
            "title": "Configuración",
            "decription": "Esta ventana es muy importante para el correcto funcionamiento de la aplicación ya que esta es la que permite configurar el directorio donde se almacenan las clases, el editor de texto predeterminado y los compiladores de cada lenguaje. El usuario puede seleccionar la dirección de cada elemento.",
            "image": "/Images/trimcode2.png"
        }
    },
    {
        "type": "description-images",
        "info": {
            "theme": "3",
            "title": "Componentes de la configuración",
            "decription": "",
            "subtitles": [
                "Buscar",
                "Cambiar color"
            ],
            "subdescriptions": [
                "Se pueden especificar las direcciones del directorio donde se almacenan las clases, el editor de texto predeterminado y los compiladores de cada lenguaje a través de un buscador.",
                "Tambíen se puede cambiar el color general de la aplicación y los colores representativos de cada lenguaje por medió de una ventana de selección de colores que permiten una amplia gama de opciones."
            ],
            "images": [
                "/Images/trimcode10.png",
                "/Images/trimcode23.png"
            ]
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "2",
            "type": "2",
            "title": "Compilador C",
            "decription": "Permite observar los primeros 10 mejores puntajes obtenidos en todo el juego ordenados, por supuesto, del mejor al peor. Estos puntajes se obtienen por características como romper bloques, matar tanques y ganar banderas.",
            "image": "/Images/trimcode4.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "1",
            "type": "1",
            "title": "Compilador C++",
            "decription": "Al entrar en esta pantalla se ingresan los nombres de los dos jugadores y automáticamente se crea un escenario aleatorio de muros, piedras, huecos y agua. Los dos jugadores juegan desde el teclado cada uno con sus respectivas teclas (Jugador 1 teclas W,A,S,D y G y jugador 2 teclas 5,1,2,3 y 0). Los jugadores pueden disparar hacia los muros para intentar romperlos o hacia el contrincante. Cada muro tiene una resistencia particular, desde el mas débil al mas fuerte es: ladrillo, piedra y acero. El agua no la pueden atravesar los tanques pero si las balas. Los tanques también pueden caer en los huecos. Al ser destruido un tanque éste reaparece en su base.",
            "image": "/Images/trimcode5.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "3",
            "type": "2",
            "title": "Compilador Java",
            "decription": "Cada jugador debe tratar de obtener la bandera del contrincante, basta con que el tanque se posicione en la base enemiga para robar la bandera, después de esto el tanque debe lograr llegar a su propia base con la bandera enemiga sin ser destruido, de esta forma de ganará un punto. Se un jugador gana al llegar a la cantidad de puntos especificada en la configuración. Como se puede observar, existe un panel superior en el que se muestra el nombre, los puntos y el highscore de cada jugador. Para aumentar el highscore basta con dispararle al enemigo, romper muros o ganar banderas. Por ultimo, con la tecla Enter se pude pausar el juego y volver al menú principal.",
            "image": "/Images/trimcode6.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "2",
            "type": "1",
            "title": "Compilador JavaScript",
            "decription": "Cada jugador debe tratar de obtener la bandera del contrincante, basta con que el tanque se posicione en la base enemiga para robar la bandera, después de esto el tanque debe lograr llegar a su propia base con la bandera enemiga sin ser destruido, de esta forma de ganará un punto. Se un jugador gana al llegar a la cantidad de puntos especificada en la configuración. Como se puede observar, existe un panel superior en el que se muestra el nombre, los puntos y el highscore de cada jugador. Para aumentar el highscore basta con dispararle al enemigo, romper muros o ganar banderas. Por ultimo, con la tecla Enter se pude pausar el juego y volver al menú principal.",
            "image": "/Images/trimcode7.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "1",
            "type": "2",
            "title": "Compilador Python",
            "decription": "Cada jugador debe tratar de obtener la bandera del contrincante, basta con que el tanque se posicione en la base enemiga para robar la bandera, después de esto el tanque debe lograr llegar a su propia base con la bandera enemiga sin ser destruido, de esta forma de ganará un punto. Se un jugador gana al llegar a la cantidad de puntos especificada en la configuración. Como se puede observar, existe un panel superior en el que se muestra el nombre, los puntos y el highscore de cada jugador. Para aumentar el highscore basta con dispararle al enemigo, romper muros o ganar banderas. Por ultimo, con la tecla Enter se pude pausar el juego y volver al menú principal.",
            "image": "/Images/trimcode9.png"
        }
    },
    {
        "type": "description-image",
        "info": {
            "theme": "3",
            "type": "1",
            "title": "Compilador MatLab",
            "decription": "Cada jugador debe tratar de obtener la bandera del contrincante, basta con que el tanque se posicione en la base enemiga para robar la bandera, después de esto el tanque debe lograr llegar a su propia base con la bandera enemiga sin ser destruido, de esta forma de ganará un punto. Se un jugador gana al llegar a la cantidad de puntos especificada en la configuración. Como se puede observar, existe un panel superior en el que se muestra el nombre, los puntos y el highscore de cada jugador. Para aumentar el highscore basta con dispararle al enemigo, romper muros o ganar banderas. Por ultimo, con la tecla Enter se pude pausar el juego y volver al menú principal.",
            "image": "/Images/trimcode8.png"
        }
    },  
    {
        "type": "title",
        "info": {
            "theme": "5",
            "title": "Proceso de creación"
        }
    },
    {
        "type": "description-images",
        "info": {
            "theme": "2",
            "title": "Planeación",
            "decription": "",
            "subtitles": [
                "Identificación",
                "Descripción",
                "Formalización"
            ],
            "subdescriptions": [
                "Esta aplicación se creó enfocada a aplicar los conocimientos aprendidos en la materia de programación básica. Por lo tanto se pensó en una problemática en la cual se pudieran aplicar las estructuras básicas de programación tales como condicionales, ciclos repetitivos y recursividad. Para tal fin se decidió crear como producto un juego.",
                "El producto se especificó como un juego de batallas multijugador, en el cual dos usuarios pudieran interactuar en el mismo teclado. La idea fue crear un juego con una temática de guerra con \"captura la bandera\" en la cual los jugadores pudieran conducir sus propios tanques y dispararlos en un tablero de batalla.",
                "Se identificaron requisitos funcionales y no funcionales, orientados a desarrollar este producto, tales como;  permitir a cada jugador controlar sus propio tanque, permitir a un tanque robar una bandera enemiga, permitir a un tanque romper muros, mostrar un panel de información y utilizar JAVA SE como lenguaje de programación."
            ],
            "images": [
                "/Images/quicklist63.jpg",
                "/Images/quicklist64.jpg",
                "/Images/quicklist65.jpg"
            ]
        }
    },
    {
        "type": "description-images",
        "info": {
            "theme": "1",
            "title": "Diseño",
            "decription": "",
            "subtitles": [
                "Arquitectura",
                "Detalle",
                "Interfaz"
            ],
            "subdescriptions": [
                "Se realizó una separación entre los controladores del juego, sus componentes gráficos (que en su gran mayoría fueron imágenes diseñadas como objetos del juego), los sonidos del juego y el almacenamiento de información. Esta arquitectura no requirió de ningún componente externo a la aplicación.",
                "Se empleó un patrón de secuencia muy utilizado en videojuegos llamado GameLoop. Consiste en crear un ciclo repetitivo que no para hasta la finalización del juego. Dentro de este ciclo se realizaron 4 divisiones: eventos, actualizar, pintar y esperar. En los eventos se realizó la detección del mouse y del teclado y sus respectivas acciones. En actualizar se establecieron los cambios que se deben realizar en cada ciclo, como el movimiento del tanque y las balas.  En pintar se estableció la actualización de la vista de los componentes. Por ultimo en esperar se definió un tiempo de congelamiento muy pequeño para que el usuario perciba los cambios adecuadamente.",
                "Se definió el tablero de juego como una cuadricula en la cual se pudieran ubicar diferentes tipos de objetos para generar obstáculos. También se estableció el panel de información en la parte superior del tablero. Por ultimo se definieron los menús de la aplicación como listas con una fuente personalizada acorde a la temática de guerra así como los fondos."
            ],
            "images": [
                "/Images/tankAttack12.png",
                "/Images/tankAttack13.png",
                "/Images/tankAttack14.png"
            ]
        }
    },
    {
        "type": "description-images",
        "info": {
            "theme": "3",
            "title": "Desarrollo",
            "decription": "",
            "subtitles": [
                "Lenguajes",
                "Entorno y tecnologías",
                "Control"
            ],
            "subdescriptions": [
                "Se empleó JAVA SE como lenguaje de programación para desarrollar la aplicación de escritorio.",
                "Se utilizó NetBeans IDE para poder manejar JAVA con completamiento de código. También se hizo uso de una herramienta de diseño gráfico llamada PhotoShop para crear y modificar las imágenes del juego. Por ultimo se empleó una herramienta web llamada CoolText para generar las imágenes de los textos con temática de guerra.",
                "Como herramienta de control de versiones y para poder dividir adecuadamente las tareas a realizar se empleó GitHub. Se creó una rama de desarrollo sobre el Master y en esta rama se crearon otras dos ramas para que los dos desarrolladores pudieran realizar sus tareas sin complicaciones de integración posterior."
            ],
            "images": [
                "/Images/tankAttack15.jpg",
                "/Images/quicklist68.jpg",
                "/Images/quicklist69.png"
            ]
        }
    },
    {
        "type": "description-images",
        "info": {
            "theme": "2",
            "title": "Pruebas",
            "decription": "",
            "subtitles": [
                "Planeación",
                "Ejecución",
                "Verificación"
            ],
            "subdescriptions": [
                "Para determinar la correcta ejecución de toda la aplicación se establecieron pruebas de flujo (para las pantallas) y pruebas de control (para las funcionalidades del la partida) acordes con los requerimientos ya definidos.",
                "En las pruebas de flujo se tomó la estructura definida en el diseño para recorrer las pantallas de aplicación y se realizaron diferentes recorridos en ejecución. En las pruebas de control se realizaron diferentes partidas en ejecución en donde se realizó una prueba por cada botón de los controles.",
                "El flujo de la aplicación no presentó ningún problema sin embargo en las pruebas de control si se identificaron varios errores. Errores como que al disparar la bala del tanque ésta atravesaba algunos muros cuando estaba muy cerca del borde. Al corregir los errores identificados se volvieron a realizar las pruebas hasta que ya no se identificaron mas errores."
            ],
            "images": [
                "/Images/quicklist70.png",
                "/Images/tankattack15.png",
                "/Images/quicklist71.jpg"
            ]
        }
    },
    {
        "type": "title",
        "info": {
            "theme": "5",
            "title": "Opinión"
        }
    },
    {
        "type": "description",
        "info": {
            "theme": "1",
            "title": "",
            "decription": "Al desarrollar este proyecto, empleando matrices, ciclos repetitivos, condicionales, combinando todo esto con una interfaz gráfica, comprendí a mayor profundidad como lograr que diferentes estructuras de código interactuen para un objetivo conjunto. Comprendí que es posible utilizar librerías y herramientas externas para lograr interfaces gráficas mas complejas y de una manera más fácil. Hubieron algunos inconvenientes a la hora de implementar la partida con el GameLoop puesto que cada objeto debía tener independencia de los demás y fue un poco confuso al inicio. También aprendí por primera vez a incluir sonidos en aplicaciones, lo cual puede ser de mucha utilidad en el futuro. En general fue interesante desarrollar un videojuego, pude darme cuenta de la gran cantidad de elementos programáticos que se requieren para hacerlo y se que todo este conocimiento podré emplearlo a futuro en proyectos mas complejos."
        }
    }
]